version: '3.0'

services:
  symfony-api-back:
    container_name: symfony-api-back
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    environment:
      XDEBUG_CONFIG: client_host=host.docker.internal
    ports:
      - 8003:80
    volumes:
      - .:/var/www/html

  symfony-api-db:
    container_name: symfony-api-db
    image: mysql:8.0
    ports:
      - 36036:3306
    environment:
      MYSQL_DATABASE: symfony_db
      MYSQL_USER: user
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    command: mysqld --sql_mode="STRICT_ALL_TABLES,NO_ENGINE_SUBSTITUTION"
    volumes:
      - symfony-api-db-data:/var/lib/mysql

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  symfony-api-db-data:

###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
